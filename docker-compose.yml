version: '2.1'

networks:
  web:
    external: true

volumes:
    prometheus_data: {}
    grafana_data: {}

services:

  prometheus:
    image: prom/prometheus:v2.17.1
    container_name: prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus_dashboard.rule=Host(`prometheus.powerit.dev`)"
      - "traefik.http.routers.prometheus_dashboard.entrypoints=websecure"
      - "traefik.http.routers.prometheus_dashboard.tls=true"
      - "traefik.http.routers.prometheus_dashboard.tls.certresolver=myresolver"
  #    -  "traefik.http.routers.prometheus_dashboard.middlewares=prometheus_tlsredirect"
     
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    # ports:
    #   - 9090:9090
    networks:
      - web
  alertmanager:
    image: prom/alertmanager:v0.20.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    ports:
      - 9093:9093
    networks:
      - web
    
  # nodeexporter:
  #   image: prom/node-exporter:v0.18.1
  #   container_name: nodeexporter
  #   environment:
  #     - USERNAME=<test>
  #     - PASSWD=<test>
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro 
  #     - /:/rootfs:ro
  #   command:
  #     - '--path.procfs=/host/proc'
  #     - '--path.rootfs=/rootfs'
  #     - '--path.sysfs=/host/sys'
  #     - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
  #   restart: unless-stopped
  #   ports:
  #     - 9100:9100
  #   networks:
  #     - web

  # cadvisor:
  #   image: gcr.io/google-containers/cadvisor:v0.34.0
  #   container_name: cadvisor
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:rw
  #     - /sys:/sys:ro
  #     - /var/lib/docker:/var/lib/docker:ro
  #   restart: unless-stopped
  #   expose:
  #     - 8080
  #   networks:
  #     - web

  grafana:
    image: grafana/grafana:6.7.2
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    # ports:
    #   - 3000:3000
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana_dashboard.rule=Host(`grafana.powerit.dev`)"
      - "traefik.http.routers.grafana_dashboard.entrypoints=websecure"
      - "traefik.http.routers.grafana_dashboard.tls=true"
      - "traefik.http.routers.grafana_dashboard.tls.certresolver=myresolver"
    #  - "traefik.http.routers.grafana_dashboard.middlewares=grafana_tlsredirect"

  alertmanager-bot:
    command:
      - --alertmanager.url=http://alertmanager:9093
      - --log.level=info
      - --store=bolt
      - --bolt.path=/data/bot.db
      - --telegram.admin=632847321
      - --telegram.token=6521593626:AAGm34OCGg-UTsSpJLvqhNQ3ql74SNcAgFg
    image: metalmatze/alertmanager-bot:0.4.3
    user: root
    ports:
      - 8080:8080
    container_name: alertmanager-bot
    hostname: alertmanager-bot
    restart: unless-stopped
    volumes:
      - ./data:/data
    networks:
      - web

  loki:
    image: grafana/loki:2.4.0
    volumes:
      - ./loki:/etc/loki
    ports:
      - "3100:3100"
    restart: unless-stopped
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - web
  promtail:
    image: grafana/promtail:2.4.0
    volumes:
      - /var/log:/var/log
      - ./promtail:/etc/promtail
    # ports:
    #   - "1514:1514" # this is only needed if you are going to send syslogs
    restart: unless-stopped
    command: -config.file=/etc/promtail/promtail-config.yml
    networks:
      - web

      